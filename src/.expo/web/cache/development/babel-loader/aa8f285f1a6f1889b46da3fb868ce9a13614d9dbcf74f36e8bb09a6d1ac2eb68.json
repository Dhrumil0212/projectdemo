{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { getPlacesByState } from \"../services/placesService\";\nimport PlaceCard from \"../components/PlaceCard\";\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nvar PlacesGrid = function PlacesGrid(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var stateName = route.params.stateName;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    places = _useState2[0],\n    setPlaces = _useState2[1];\n  useEffect(function () {\n    getPlacesByState(stateName).then(setPlaces);\n  }, [stateName]);\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      style: styles.heading,\n      children: [stateName, \" Places\"]\n    }), _jsx(FlatList, {\n      data: places,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(PlaceCard, {\n          place: item,\n          onPress: function onPress() {\n            return navigation.navigate('PlaceDetails', {\n              placeName: item.name\n            });\n          }\n        });\n      },\n      numColumns: 2,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 10\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginVertical: 10\n  }\n});\nexport default PlacesGrid;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","Text","FlatList","ScrollView","getPlacesByState","PlaceCard","jsxs","_jsxs","jsx","_jsx","PlacesGrid","_ref","route","navigation","stateName","params","_useState","_useState2","_slicedToArray","places","setPlaces","then","style","styles","container","children","heading","data","renderItem","_ref2","item","place","onPress","navigate","placeName","name","numColumns","keyExtractor","id","create","flex","backgroundColor","padding","fontSize","fontWeight","textAlign","marginVertical"],"sources":["C:/Users/Dhrumil/VS Code/projectdemo/src/screens/PlacesGrid.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, Text, FlatList, ScrollView } from 'react-native';\nimport { getPlacesByState } from '../services/placesService';\nimport PlaceCard from '../components/PlaceCard';\n\nconst PlacesGrid = ({ route, navigation }) => {\n  const { stateName } = route.params;\n  const [places, setPlaces] = useState([]);\n\n  useEffect(() => {\n    getPlacesByState(stateName).then(setPlaces);\n  }, [stateName]);\n\n  return (\n    <ScrollView style={styles.container}>\n      <Text style={styles.heading}>{stateName} Places</Text>\n      <FlatList\n        data={places}\n        renderItem={({ item }) => (\n          <PlaceCard\n            place={item}\n            onPress={() => navigation.navigate('PlaceDetails', { placeName: item.name })}\n          />\n        )}\n        numColumns={2}\n        keyExtractor={(item) => item.id}\n      />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 10,\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginVertical: 10,\n  },\n});\n\nexport default PlacesGrid;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAEnD,SAASC,gBAAgB;AACzB,OAAOC,SAAS;AAAgC,SAAAC,IAAA,IAAAC,KAAA,EAAAC,GAAA,IAAAC,IAAA;AAEhD,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAA8B;EAAA,IAAxBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;EACrC,IAAQC,SAAS,GAAKF,KAAK,CAACG,MAAM,CAA1BD,SAAS;EACjB,IAAAE,SAAA,GAA4BnB,QAAQ,CAAC,EAAE,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAExBnB,SAAS,CAAC,YAAM;IACdM,gBAAgB,CAACU,SAAS,CAAC,CAACO,IAAI,CAACD,SAAS,CAAC;EAC7C,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC;EAEf,OACEP,KAAA,CAACJ,UAAU;IAACmB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAClClB,KAAA,CAACN,IAAI;MAACqB,KAAK,EAAEC,MAAM,CAACG,OAAQ;MAAAD,QAAA,GAAEX,SAAS,EAAC,SAAO;IAAA,CAAM,CAAC,EACtDL,IAAA,CAACP,QAAQ;MACPyB,IAAI,EAAER,MAAO;MACbS,UAAU,EAAE,SAAZA,UAAUA,CAAAC,KAAA;QAAA,IAAKC,IAAI,GAAAD,KAAA,CAAJC,IAAI;QAAA,OACjBrB,IAAA,CAACJ,SAAS;UACR0B,KAAK,EAAED,IAAK;UACZE,OAAO,EAAE,SAATA,OAAOA,CAAA;YAAA,OAAQnB,UAAU,CAACoB,QAAQ,CAAC,cAAc,EAAE;cAAEC,SAAS,EAAEJ,IAAI,CAACK;YAAK,CAAC,CAAC;UAAA;QAAC,CAC9E,CAAC;MAAA,CACF;MACFC,UAAU,EAAE,CAAE;MACdC,YAAY,EAAE,SAAdA,YAAYA,CAAGP,IAAI;QAAA,OAAKA,IAAI,CAACQ,EAAE;MAAA;IAAC,CACjC,CAAC;EAAA,CACQ,CAAC;AAEjB,CAAC;AAED,IAAMf,MAAM,GAAGxB,UAAU,CAACwC,MAAM,CAAC;EAC/Bf,SAAS,EAAE;IACTgB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,OAAO,EAAE;EACX,CAAC;EACDhB,OAAO,EAAE;IACPiB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,QAAQ;IACnBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAepC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}