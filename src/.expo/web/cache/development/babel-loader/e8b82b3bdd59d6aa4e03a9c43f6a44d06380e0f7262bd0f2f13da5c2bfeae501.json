{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { getStates } from \"../services/placesService\";\nimport { HeartIcon, ChevronRightIcon } from \"react-native-heroicons/solid\";\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from \"react-native-responsive-screen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar StatesGrid = function StatesGrid() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    states = _useState2[0],\n    setStates = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    favorites = _useState4[0],\n    setFavorites = _useState4[1];\n  var navigation = useNavigation();\n  useEffect(function () {\n    getStates().then(setStates);\n  }, []);\n  var toggleFavorite = function toggleFavorite(stateName) {\n    setFavorites(function (prev) {\n      return prev.includes(stateName) ? prev.filter(function (name) {\n        return name !== stateName;\n      }) : [].concat(_toConsumableArray(prev), [stateName]);\n    });\n  };\n  var renderStateCard = function renderStateCard(_ref) {\n    var item = _ref.item;\n    return _jsxs(TouchableOpacity, {\n      style: styles.cardContainer,\n      onPress: function onPress() {\n        return navigation.navigate(\"PlacesGrid\", {\n          stateName: item.name\n        });\n      },\n      children: [_jsx(Image, {\n        source: item.image,\n        style: styles.cardImage\n      }), _jsxs(View, {\n        style: styles.cardContent,\n        children: [_jsx(Text, {\n          style: styles.cardTitle,\n          children: item.name\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return toggleFavorite(item.name);\n          },\n          children: _jsx(HeartIcon, {\n            size: 24,\n            color: favorites.includes(item.name) ? \"red\" : \"gray\"\n          })\n        })]\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"dark\"\n    }), _jsxs(SafeAreaView, {\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: \"States of India\"\n      }), _jsx(FlatList, {\n        data: states,\n        renderItem: renderStateCard,\n        numColumns: 2,\n        keyExtractor: function keyExtractor(item) {\n          return item.name;\n        },\n        contentContainerStyle: styles.grid\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f8f9fa\",\n    paddingHorizontal: wp(4)\n  },\n  heading: {\n    fontSize: wp(6),\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginVertical: hp(2),\n    color: \"#343a40\"\n  },\n  grid: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  cardContainer: {\n    backgroundColor: \"#fff\",\n    borderRadius: wp(3),\n    margin: wp(2),\n    width: wp(42),\n    overflow: \"hidden\",\n    shadowColor: \"#000\",\n    shadowOpacity: 0.1,\n    shadowRadius: wp(2),\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    elevation: 3\n  },\n  cardImage: {\n    width: \"100%\",\n    height: hp(20)\n  },\n  cardContent: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: wp(3)\n  },\n  cardTitle: {\n    fontSize: wp(4.5),\n    fontWeight: \"600\",\n    color: \"#343a40\"\n  }\n});\nexport default StatesGrid;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","TouchableOpacity","FlatList","Platform","StyleSheet","SafeAreaView","StatusBar","useNavigation","getStates","HeartIcon","ChevronRightIcon","widthPercentageToDP","wp","heightPercentageToDP","hp","jsx","_jsx","jsxs","_jsxs","StatesGrid","_useState","_useState2","_slicedToArray","states","setStates","_useState3","_useState4","favorites","setFavorites","navigation","then","toggleFavorite","stateName","prev","includes","filter","name","concat","_toConsumableArray","renderStateCard","_ref","item","style","styles","cardContainer","onPress","navigate","children","source","image","cardImage","cardContent","cardTitle","size","color","container","heading","data","renderItem","numColumns","keyExtractor","contentContainerStyle","grid","create","flex","backgroundColor","paddingHorizontal","fontSize","fontWeight","textAlign","marginVertical","alignItems","justifyContent","borderRadius","margin","width","overflow","shadowColor","shadowOpacity","shadowRadius","shadowOffset","height","elevation","flexDirection","padding"],"sources":["C:/Users/Dhrumil/VS Code/projectdemo/src/screens/StatesGrid.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  TouchableOpacity,\n  FlatList,\n  Platform,\n  StyleSheet,\n} from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { getStates } from \"../services/placesService\";\nimport { HeartIcon, ChevronRightIcon } from \"react-native-heroicons/solid\";\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n} from \"react-native-responsive-screen\";\n\nconst StatesGrid = () => {\n  const [states, setStates] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    getStates().then(setStates);\n  }, []);\n\n  const toggleFavorite = (stateName) => {\n    setFavorites((prev) =>\n      prev.includes(stateName)\n        ? prev.filter((name) => name !== stateName)\n        : [...prev, stateName]\n    );\n  };\n\n  const renderStateCard = ({ item }) => (\n    <TouchableOpacity\n      style={styles.cardContainer}\n      onPress={() =>\n        navigation.navigate(\"PlacesGrid\", { stateName: item.name })\n      }\n    >\n      <Image source={item.image} style={styles.cardImage} />\n      <View style={styles.cardContent}>\n        <Text style={styles.cardTitle}>{item.name}</Text>\n        <TouchableOpacity onPress={() => toggleFavorite(item.name)}>\n          <HeartIcon\n            size={24}\n            color={favorites.includes(item.name) ? \"red\" : \"gray\"}\n          />\n        </TouchableOpacity>\n      </View>\n    </TouchableOpacity>\n  );\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"dark\" />\n      <SafeAreaView>\n        <Text style={styles.heading}>States of India</Text>\n        <FlatList\n          data={states}\n          renderItem={renderStateCard}\n          numColumns={2}\n          keyExtractor={(item) => item.name}\n          contentContainerStyle={styles.grid}\n        />\n      </SafeAreaView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f8f9fa\",\n    paddingHorizontal: wp(4),\n  },\n  heading: {\n    fontSize: wp(6),\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginVertical: hp(2),\n    color: \"#343a40\",\n  },\n  grid: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  cardContainer: {\n    backgroundColor: \"#fff\",\n    borderRadius: wp(3),\n    margin: wp(2),\n    width: wp(42),\n    overflow: \"hidden\",\n    shadowColor: \"#000\",\n    shadowOpacity: 0.1,\n    shadowRadius: wp(2),\n    shadowOffset: { width: 0, height: 2 },\n    elevation: 3,\n  },\n  cardImage: {\n    width: \"100%\",\n    height: hp(20),\n  },\n  cardContent: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: wp(3),\n  },\n  cardTitle: {\n    fontSize: wp(4.5),\n    fontWeight: \"600\",\n    color: \"#343a40\",\n  },\n});\n\nexport default StatesGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}