{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhrumil\\\\VS Code\\\\projectdemo\\\\src\\\\node_modules\\\\react-native\\\\Libraries\\\\Inspector\\\\DevtoolsOverlay.js\";\nimport View from '../Components/View/View';\nimport ReactNativeFeatureFlags from '../ReactNative/ReactNativeFeatureFlags';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport Dimensions from '../Utilities/Dimensions';\nimport ElementBox from './ElementBox';\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  findNodeHandle\n} = require('../ReactNative/RendererProxy');\nconst getInspectorDataForViewAtPoint = require('./getInspectorDataForViewAtPoint');\nconst {\n  useEffect,\n  useState,\n  useCallback,\n  useRef\n} = React;\nconst hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;\nexport default function DevtoolsOverlay({\n  inspectedView\n}) {\n  const [inspected, setInspected] = useState(null);\n  const [isInspecting, setIsInspecting] = useState(false);\n  const devToolsAgentRef = useRef(null);\n  useEffect(() => {\n    let devToolsAgent = null;\n    let hideTimeoutId = null;\n    function onAgentHideNativeHighlight() {\n      clearTimeout(hideTimeoutId);\n      hideTimeoutId = setTimeout(() => {\n        setInspected(null);\n      }, 100);\n    }\n    function onAgentShowNativeHighlight(node) {\n      clearTimeout(hideTimeoutId);\n      const component = node.publicInstance ?? node.canonical ?? node;\n      if (!component || !component.measure) {\n        return;\n      }\n      component.measure((x, y, width, height, left, top) => {\n        setInspected({\n          frame: {\n            left,\n            top,\n            width,\n            height\n          }\n        });\n      });\n    }\n    function cleanup() {\n      const currentAgent = devToolsAgent;\n      if (currentAgent != null) {\n        currentAgent.removeListener('hideNativeHighlight', onAgentHideNativeHighlight);\n        currentAgent.removeListener('showNativeHighlight', onAgentShowNativeHighlight);\n        currentAgent.removeListener('shutdown', cleanup);\n        currentAgent.removeListener('startInspectingNative', onStartInspectingNative);\n        currentAgent.removeListener('stopInspectingNative', onStopInspectingNative);\n        devToolsAgent = null;\n      }\n      devToolsAgentRef.current = null;\n    }\n    function onStartInspectingNative() {\n      setIsInspecting(true);\n    }\n    function onStopInspectingNative() {\n      setIsInspecting(false);\n    }\n    function _attachToDevtools(agent) {\n      devToolsAgent = agent;\n      devToolsAgentRef.current = agent;\n      agent.addListener('hideNativeHighlight', onAgentHideNativeHighlight);\n      agent.addListener('showNativeHighlight', onAgentShowNativeHighlight);\n      agent.addListener('shutdown', cleanup);\n      agent.addListener('startInspectingNative', onStartInspectingNative);\n      agent.addListener('stopInspectingNative', onStopInspectingNative);\n    }\n    hook.on('react-devtools', _attachToDevtools);\n    if (hook.reactDevtoolsAgent) {\n      _attachToDevtools(hook.reactDevtoolsAgent);\n    }\n    return () => {\n      hook.off('react-devtools', _attachToDevtools);\n      cleanup();\n    };\n  }, []);\n  const findViewForLocation = useCallback((x, y) => {\n    const agent = devToolsAgentRef.current;\n    if (agent == null) {\n      return;\n    }\n    getInspectorDataForViewAtPoint(inspectedView, x, y, viewData => {\n      const {\n        touchedViewTag,\n        closestInstance,\n        frame\n      } = viewData;\n      if (closestInstance != null || touchedViewTag != null) {\n        agent.selectNode(findNodeHandle(touchedViewTag));\n        if (closestInstance != null) {\n          agent.selectNode(closestInstance);\n        }\n        setInspected({\n          frame\n        });\n        return true;\n      }\n      return false;\n    });\n  }, [inspectedView]);\n  const stopInspecting = useCallback(() => {\n    const agent = devToolsAgentRef.current;\n    if (agent == null) {\n      return;\n    }\n    agent.stopInspectingNative(true);\n    setIsInspecting(false);\n    setInspected(null);\n  }, []);\n  const onPointerMove = useCallback(e => {\n    findViewForLocation(e.nativeEvent.x, e.nativeEvent.y);\n  }, [findViewForLocation]);\n  const onResponderMove = useCallback(e => {\n    findViewForLocation(e.nativeEvent.touches[0].locationX, e.nativeEvent.touches[0].locationY);\n  }, [findViewForLocation]);\n  const shouldSetResponder = useCallback(e => {\n    onResponderMove(e);\n    return true;\n  }, [onResponderMove]);\n  let highlight = inspected ? _jsxDEV(ElementBox, {\n    frame: inspected.frame\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 31\n  }, this) : null;\n  if (isInspecting) {\n    const events = ReactNativeFeatureFlags.shouldEmitW3CPointerEvents() ? {\n      onPointerMove,\n      onPointerDown: onPointerMove,\n      onPointerUp: stopInspecting\n    } : {\n      onStartShouldSetResponder: shouldSetResponder,\n      onResponderMove: onResponderMove,\n      onResponderRelease: stopInspecting\n    };\n    return _jsxDEV(View, Object.assign({\n      nativeID: \"devToolsInspectorOverlay\",\n      style: [styles.inspector, {\n        height: Dimensions.get('window').height\n      }]\n    }, events, {\n      children: highlight\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  }\n  return highlight;\n}\nconst styles = StyleSheet.create({\n  inspector: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0\n  }\n});","map":{"version":3,"names":["View","ReactNativeFeatureFlags","StyleSheet","Dimensions","ElementBox","React","jsxDEV","_jsxDEV","findNodeHandle","require","getInspectorDataForViewAtPoint","useEffect","useState","useCallback","useRef","hook","window","__REACT_DEVTOOLS_GLOBAL_HOOK__","DevtoolsOverlay","inspectedView","inspected","setInspected","isInspecting","setIsInspecting","devToolsAgentRef","devToolsAgent","hideTimeoutId","onAgentHideNativeHighlight","clearTimeout","setTimeout","onAgentShowNativeHighlight","node","component","publicInstance","canonical","measure","x","y","width","height","left","top","frame","cleanup","currentAgent","removeListener","onStartInspectingNative","onStopInspectingNative","current","_attachToDevtools","agent","addListener","on","reactDevtoolsAgent","off","findViewForLocation","viewData","touchedViewTag","closestInstance","selectNode","stopInspecting","stopInspectingNative","onPointerMove","e","nativeEvent","onResponderMove","touches","locationX","locationY","shouldSetResponder","highlight","fileName","_jsxFileName","lineNumber","columnNumber","events","shouldEmitW3CPointerEvents","onPointerDown","onPointerUp","onStartShouldSetResponder","onResponderRelease","Object","assign","nativeID","style","styles","inspector","get","children","create","backgroundColor","position","right"],"sources":["C:/Users/Dhrumil/VS Code/projectdemo/src/node_modules/react-native/Libraries/Inspector/DevtoolsOverlay.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {PointerEvent} from '../Types/CoreEventTypes';\nimport type {PressEvent} from '../Types/CoreEventTypes';\nimport type {HostRef} from './getInspectorDataForViewAtPoint';\n\nimport View from '../Components/View/View';\nimport ReactNativeFeatureFlags from '../ReactNative/ReactNativeFeatureFlags';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport Dimensions from '../Utilities/Dimensions';\nimport ElementBox from './ElementBox';\nimport * as React from 'react';\n\nconst {findNodeHandle} = require('../ReactNative/RendererProxy');\nconst getInspectorDataForViewAtPoint = require('./getInspectorDataForViewAtPoint');\n\nconst {useEffect, useState, useCallback, useRef} = React;\n\nconst hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;\n\nexport default function DevtoolsOverlay({\n  inspectedView,\n}: {\n  inspectedView: ?HostRef,\n}): React.Node {\n  const [inspected, setInspected] = useState<null | {\n    frame: {+height: any, +left: any, +top: any, +width: any},\n  }>(null);\n  const [isInspecting, setIsInspecting] = useState(false);\n  const devToolsAgentRef = useRef(null);\n\n  useEffect(() => {\n    let devToolsAgent = null;\n    let hideTimeoutId = null;\n\n    function onAgentHideNativeHighlight() {\n      // we wait to actually hide in order to avoid flicker\n      clearTimeout(hideTimeoutId);\n      hideTimeoutId = setTimeout(() => {\n        setInspected(null);\n      }, 100);\n    }\n\n    function onAgentShowNativeHighlight(node: any) {\n      clearTimeout(hideTimeoutId);\n\n      // `publicInstance` => Fabric\n      // TODO: remove this check when syncing the new version of the renderer from React to React Native.\n      // `canonical` => Legacy Fabric\n      // `node` => Legacy renderer\n      const component = node.publicInstance ?? node.canonical ?? node;\n      if (!component || !component.measure) {\n        return;\n      }\n\n      component.measure((x, y, width, height, left, top) => {\n        setInspected({\n          frame: {left, top, width, height},\n        });\n      });\n    }\n\n    function cleanup() {\n      const currentAgent = devToolsAgent;\n      if (currentAgent != null) {\n        currentAgent.removeListener(\n          'hideNativeHighlight',\n          onAgentHideNativeHighlight,\n        );\n        currentAgent.removeListener(\n          'showNativeHighlight',\n          onAgentShowNativeHighlight,\n        );\n        currentAgent.removeListener('shutdown', cleanup);\n        currentAgent.removeListener(\n          'startInspectingNative',\n          onStartInspectingNative,\n        );\n        currentAgent.removeListener(\n          'stopInspectingNative',\n          onStopInspectingNative,\n        );\n        devToolsAgent = null;\n      }\n      devToolsAgentRef.current = null;\n    }\n\n    function onStartInspectingNative() {\n      setIsInspecting(true);\n    }\n\n    function onStopInspectingNative() {\n      setIsInspecting(false);\n    }\n\n    function _attachToDevtools(agent: Object) {\n      devToolsAgent = agent;\n      devToolsAgentRef.current = agent;\n      agent.addListener('hideNativeHighlight', onAgentHideNativeHighlight);\n      agent.addListener('showNativeHighlight', onAgentShowNativeHighlight);\n      agent.addListener('shutdown', cleanup);\n      agent.addListener('startInspectingNative', onStartInspectingNative);\n      agent.addListener('stopInspectingNative', onStopInspectingNative);\n    }\n\n    hook.on('react-devtools', _attachToDevtools);\n    if (hook.reactDevtoolsAgent) {\n      _attachToDevtools(hook.reactDevtoolsAgent);\n    }\n    return () => {\n      hook.off('react-devtools', _attachToDevtools);\n      cleanup();\n    };\n  }, []);\n\n  const findViewForLocation = useCallback(\n    (x: number, y: number) => {\n      const agent = devToolsAgentRef.current;\n      if (agent == null) {\n        return;\n      }\n      getInspectorDataForViewAtPoint(inspectedView, x, y, viewData => {\n        const {touchedViewTag, closestInstance, frame} = viewData;\n        if (closestInstance != null || touchedViewTag != null) {\n          // We call `selectNode` for both non-fabric(viewTag) and fabric(instance),\n          // this makes sure it works for both architectures.\n          agent.selectNode(findNodeHandle(touchedViewTag));\n          if (closestInstance != null) {\n            agent.selectNode(closestInstance);\n          }\n          setInspected({\n            frame,\n          });\n          return true;\n        }\n        return false;\n      });\n    },\n    [inspectedView],\n  );\n\n  const stopInspecting = useCallback(() => {\n    const agent = devToolsAgentRef.current;\n    if (agent == null) {\n      return;\n    }\n    agent.stopInspectingNative(true);\n    setIsInspecting(false);\n    setInspected(null);\n  }, []);\n\n  const onPointerMove = useCallback(\n    (e: PointerEvent) => {\n      findViewForLocation(e.nativeEvent.x, e.nativeEvent.y);\n    },\n    [findViewForLocation],\n  );\n\n  const onResponderMove = useCallback(\n    (e: PressEvent) => {\n      findViewForLocation(\n        e.nativeEvent.touches[0].locationX,\n        e.nativeEvent.touches[0].locationY,\n      );\n    },\n    [findViewForLocation],\n  );\n\n  const shouldSetResponder = useCallback(\n    (e: PressEvent): boolean => {\n      onResponderMove(e);\n      return true;\n    },\n    [onResponderMove],\n  );\n\n  let highlight = inspected ? <ElementBox frame={inspected.frame} /> : null;\n  if (isInspecting) {\n    const events =\n      // Pointer events only work on fabric\n      ReactNativeFeatureFlags.shouldEmitW3CPointerEvents()\n        ? {\n            onPointerMove,\n            onPointerDown: onPointerMove,\n            onPointerUp: stopInspecting,\n          }\n        : {\n            onStartShouldSetResponder: shouldSetResponder,\n            onResponderMove: onResponderMove,\n            onResponderRelease: stopInspecting,\n          };\n    return (\n      <View\n        nativeID=\"devToolsInspectorOverlay\"\n        style={[styles.inspector, {height: Dimensions.get('window').height}]}\n        {...events}>\n        {highlight}\n      </View>\n    );\n  }\n  return highlight;\n}\n\nconst styles = StyleSheet.create({\n  inspector: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n  },\n});\n"],"mappings":";AAcA,OAAOA,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,uBAAuB,MAAM,wCAAwC;AAC5E,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAM;EAACC;AAAc,CAAC,GAAGC,OAAO,CAAC,8BAA8B,CAAC;AAChE,MAAMC,8BAA8B,GAAGD,OAAO,CAAC,kCAAkC,CAAC;AAElF,MAAM;EAACE,SAAS;EAAEC,QAAQ;EAAEC,WAAW;EAAEC;AAAM,CAAC,GAAGT,KAAK;AAExD,MAAMU,IAAI,GAAGC,MAAM,CAACC,8BAA8B;AAElD,eAAe,SAASC,eAAeA,CAAC;EACtCC;AAGF,CAAC,EAAc;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAEvC,IAAI,CAAC;EACR,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMY,gBAAgB,GAAGV,MAAM,CAAC,IAAI,CAAC;EAErCH,SAAS,CAAC,MAAM;IACd,IAAIc,aAAa,GAAG,IAAI;IACxB,IAAIC,aAAa,GAAG,IAAI;IAExB,SAASC,0BAA0BA,CAAA,EAAG;MAEpCC,YAAY,CAACF,aAAa,CAAC;MAC3BA,aAAa,GAAGG,UAAU,CAAC,MAAM;QAC/BR,YAAY,CAAC,IAAI,CAAC;MACpB,CAAC,EAAE,GAAG,CAAC;IACT;IAEA,SAASS,0BAA0BA,CAACC,IAAS,EAAE;MAC7CH,YAAY,CAACF,aAAa,CAAC;MAM3B,MAAMM,SAAS,GAAGD,IAAI,CAACE,cAAc,IAAIF,IAAI,CAACG,SAAS,IAAIH,IAAI;MAC/D,IAAI,CAACC,SAAS,IAAI,CAACA,SAAS,CAACG,OAAO,EAAE;QACpC;MACF;MAEAH,SAAS,CAACG,OAAO,CAAC,CAACC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,KAAK;QACpDpB,YAAY,CAAC;UACXqB,KAAK,EAAE;YAACF,IAAI;YAAEC,GAAG;YAAEH,KAAK;YAAEC;UAAM;QAClC,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IAEA,SAASI,OAAOA,CAAA,EAAG;MACjB,MAAMC,YAAY,GAAGnB,aAAa;MAClC,IAAImB,YAAY,IAAI,IAAI,EAAE;QACxBA,YAAY,CAACC,cAAc,CACzB,qBAAqB,EACrBlB,0BACF,CAAC;QACDiB,YAAY,CAACC,cAAc,CACzB,qBAAqB,EACrBf,0BACF,CAAC;QACDc,YAAY,CAACC,cAAc,CAAC,UAAU,EAAEF,OAAO,CAAC;QAChDC,YAAY,CAACC,cAAc,CACzB,uBAAuB,EACvBC,uBACF,CAAC;QACDF,YAAY,CAACC,cAAc,CACzB,sBAAsB,EACtBE,sBACF,CAAC;QACDtB,aAAa,GAAG,IAAI;MACtB;MACAD,gBAAgB,CAACwB,OAAO,GAAG,IAAI;IACjC;IAEA,SAASF,uBAAuBA,CAAA,EAAG;MACjCvB,eAAe,CAAC,IAAI,CAAC;IACvB;IAEA,SAASwB,sBAAsBA,CAAA,EAAG;MAChCxB,eAAe,CAAC,KAAK,CAAC;IACxB;IAEA,SAAS0B,iBAAiBA,CAACC,KAAa,EAAE;MACxCzB,aAAa,GAAGyB,KAAK;MACrB1B,gBAAgB,CAACwB,OAAO,GAAGE,KAAK;MAChCA,KAAK,CAACC,WAAW,CAAC,qBAAqB,EAAExB,0BAA0B,CAAC;MACpEuB,KAAK,CAACC,WAAW,CAAC,qBAAqB,EAAErB,0BAA0B,CAAC;MACpEoB,KAAK,CAACC,WAAW,CAAC,UAAU,EAAER,OAAO,CAAC;MACtCO,KAAK,CAACC,WAAW,CAAC,uBAAuB,EAAEL,uBAAuB,CAAC;MACnEI,KAAK,CAACC,WAAW,CAAC,sBAAsB,EAAEJ,sBAAsB,CAAC;IACnE;IAEAhC,IAAI,CAACqC,EAAE,CAAC,gBAAgB,EAAEH,iBAAiB,CAAC;IAC5C,IAAIlC,IAAI,CAACsC,kBAAkB,EAAE;MAC3BJ,iBAAiB,CAAClC,IAAI,CAACsC,kBAAkB,CAAC;IAC5C;IACA,OAAO,MAAM;MACXtC,IAAI,CAACuC,GAAG,CAAC,gBAAgB,EAAEL,iBAAiB,CAAC;MAC7CN,OAAO,CAAC,CAAC;IACX,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,mBAAmB,GAAG1C,WAAW,CACrC,CAACuB,CAAS,EAAEC,CAAS,KAAK;IACxB,MAAMa,KAAK,GAAG1B,gBAAgB,CAACwB,OAAO;IACtC,IAAIE,KAAK,IAAI,IAAI,EAAE;MACjB;IACF;IACAxC,8BAA8B,CAACS,aAAa,EAAEiB,CAAC,EAAEC,CAAC,EAAEmB,QAAQ,IAAI;MAC9D,MAAM;QAACC,cAAc;QAAEC,eAAe;QAAEhB;MAAK,CAAC,GAAGc,QAAQ;MACzD,IAAIE,eAAe,IAAI,IAAI,IAAID,cAAc,IAAI,IAAI,EAAE;QAGrDP,KAAK,CAACS,UAAU,CAACnD,cAAc,CAACiD,cAAc,CAAC,CAAC;QAChD,IAAIC,eAAe,IAAI,IAAI,EAAE;UAC3BR,KAAK,CAACS,UAAU,CAACD,eAAe,CAAC;QACnC;QACArC,YAAY,CAAC;UACXqB;QACF,CAAC,CAAC;QACF,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC,CAAC;EACJ,CAAC,EACD,CAACvB,aAAa,CAChB,CAAC;EAED,MAAMyC,cAAc,GAAG/C,WAAW,CAAC,MAAM;IACvC,MAAMqC,KAAK,GAAG1B,gBAAgB,CAACwB,OAAO;IACtC,IAAIE,KAAK,IAAI,IAAI,EAAE;MACjB;IACF;IACAA,KAAK,CAACW,oBAAoB,CAAC,IAAI,CAAC;IAChCtC,eAAe,CAAC,KAAK,CAAC;IACtBF,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMyC,aAAa,GAAGjD,WAAW,CAC9BkD,CAAe,IAAK;IACnBR,mBAAmB,CAACQ,CAAC,CAACC,WAAW,CAAC5B,CAAC,EAAE2B,CAAC,CAACC,WAAW,CAAC3B,CAAC,CAAC;EACvD,CAAC,EACD,CAACkB,mBAAmB,CACtB,CAAC;EAED,MAAMU,eAAe,GAAGpD,WAAW,CAChCkD,CAAa,IAAK;IACjBR,mBAAmB,CACjBQ,CAAC,CAACC,WAAW,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,SAAS,EAClCJ,CAAC,CAACC,WAAW,CAACE,OAAO,CAAC,CAAC,CAAC,CAACE,SAC3B,CAAC;EACH,CAAC,EACD,CAACb,mBAAmB,CACtB,CAAC;EAED,MAAMc,kBAAkB,GAAGxD,WAAW,CACnCkD,CAAa,IAAc;IAC1BE,eAAe,CAACF,CAAC,CAAC;IAClB,OAAO,IAAI;EACb,CAAC,EACD,CAACE,eAAe,CAClB,CAAC;EAED,IAAIK,SAAS,GAAGlD,SAAS,GAAGb,OAAA,CAACH,UAAU;IAACsC,KAAK,EAAEtB,SAAS,CAACsB;EAAM;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,GAAG,IAAI;EACzE,IAAIpD,YAAY,EAAE;IAChB,MAAMqD,MAAM,GAEV1E,uBAAuB,CAAC2E,0BAA0B,CAAC,CAAC,GAChD;MACEd,aAAa;MACbe,aAAa,EAAEf,aAAa;MAC5BgB,WAAW,EAAElB;IACf,CAAC,GACD;MACEmB,yBAAyB,EAAEV,kBAAkB;MAC7CJ,eAAe,EAAEA,eAAe;MAChCe,kBAAkB,EAAEpB;IACtB,CAAC;IACP,OACErD,OAAA,CAACP,IAAI,EAAAiF,MAAA,CAAAC,MAAA;MACHC,QAAQ,EAAC,0BAA0B;MACnCC,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAE;QAAC/C,MAAM,EAAEpC,UAAU,CAACoF,GAAG,CAAC,QAAQ,CAAC,CAAChD;MAAM,CAAC;IAAE,GACjEoC,MAAM;MAAAa,QAAA,EACTlB;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEX;EACA,OAAOJ,SAAS;AAClB;AAEA,MAAMe,MAAM,GAAGnF,UAAU,CAACuF,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,eAAe,EAAE,aAAa;IAC9BC,QAAQ,EAAE,UAAU;IACpBnD,IAAI,EAAE,CAAC;IACPC,GAAG,EAAE,CAAC;IACNmD,KAAK,EAAE;EACT;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}