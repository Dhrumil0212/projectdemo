{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { getPlacesByState } from \"../services/placesService\";\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from \"react-native-responsive-screen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PlacesGrid = function PlacesGrid(_ref) {\n  var route = _ref.route;\n  var stateName = route.params.stateName;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    places = _useState2[0],\n    setPlaces = _useState2[1];\n  var navigation = useNavigation();\n  useEffect(function () {\n    getPlacesByState(stateName).then(setPlaces);\n  }, [stateName]);\n  var renderPlaceCard = function renderPlaceCard(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(TouchableOpacity, {\n      style: styles.cardContainer,\n      onPress: function onPress() {\n        return navigation.navigate(\"PlaceDetails\", {\n          placeName: item.name\n        });\n      },\n      children: [_jsx(Image, {\n        source: item.image,\n        style: styles.cardImage\n      }), _jsx(View, {\n        style: styles.cardContent,\n        children: _jsx(Text, {\n          style: styles.cardTitle,\n          children: item.name\n        })\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"dark\"\n    }), _jsxs(SafeAreaView, {\n      children: [_jsxs(Text, {\n        style: styles.heading,\n        children: [stateName, \" Places\"]\n      }), _jsx(FlatList, {\n        data: places,\n        renderItem: renderPlaceCard,\n        numColumns: 2,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        contentContainerStyle: styles.grid\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f8f9fa\",\n    paddingHorizontal: wp(4)\n  },\n  heading: {\n    fontSize: wp(6),\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginVertical: hp(2),\n    color: \"#343a40\"\n  },\n  grid: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  cardContainer: {\n    backgroundColor: \"#fff\",\n    borderRadius: wp(3),\n    margin: wp(2),\n    width: wp(42),\n    overflow: \"hidden\",\n    shadowColor: \"#000\",\n    shadowOpacity: 0.1,\n    shadowRadius: wp(2),\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    elevation: 3\n  },\n  cardImage: {\n    width: \"100%\",\n    height: hp(20)\n  },\n  cardContent: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: wp(3)\n  },\n  cardTitle: {\n    fontSize: wp(4.5),\n    fontWeight: \"600\",\n    color: \"#343a40\"\n  }\n});\nexport default PlacesGrid;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","TouchableOpacity","FlatList","StyleSheet","SafeAreaView","StatusBar","useNavigation","getPlacesByState","widthPercentageToDP","wp","heightPercentageToDP","hp","jsx","_jsx","jsxs","_jsxs","PlacesGrid","_ref","route","stateName","params","_useState","_useState2","_slicedToArray","places","setPlaces","navigation","then","renderPlaceCard","_ref2","item","style","styles","cardContainer","onPress","navigate","placeName","name","children","source","image","cardImage","cardContent","cardTitle","container","heading","data","renderItem","numColumns","keyExtractor","id","contentContainerStyle","grid","create","flex","backgroundColor","paddingHorizontal","fontSize","fontWeight","textAlign","marginVertical","color","alignItems","justifyContent","borderRadius","margin","width","overflow","shadowColor","shadowOpacity","shadowRadius","shadowOffset","height","elevation","flexDirection","padding"],"sources":["C:/Users/Dhrumil/VS Code/projectdemo/src/screens/PlacesGrid.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  TouchableOpacity,\n  FlatList,\n  StyleSheet,\n} from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { getPlacesByState } from \"../services/placesService\";\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n} from \"react-native-responsive-screen\";\n\nconst PlacesGrid = ({ route }) => {\n  const { stateName } = route.params;\n  const [places, setPlaces] = useState([]);\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    getPlacesByState(stateName).then(setPlaces);\n  }, [stateName]);\n\n  const renderPlaceCard = ({ item }) => (\n    <TouchableOpacity\n      style={styles.cardContainer}\n      onPress={() =>\n        navigation.navigate(\"PlaceDetails\", { placeName: item.name })\n      }\n    >\n      <Image source={item.image} style={styles.cardImage} />\n      <View style={styles.cardContent}>\n        <Text style={styles.cardTitle}>{item.name}</Text>\n      </View>\n    </TouchableOpacity>\n  );\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"dark\" />\n      <SafeAreaView>\n        <Text style={styles.heading}>{stateName} Places</Text>\n        <FlatList\n          data={places}\n          renderItem={renderPlaceCard}\n          numColumns={2}\n          keyExtractor={(item) => item.id}\n          contentContainerStyle={styles.grid}\n        />\n      </SafeAreaView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f8f9fa\",\n    paddingHorizontal: wp(4),\n  },\n  heading: {\n    fontSize: wp(6),\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginVertical: hp(2),\n    color: \"#343a40\",\n  },\n  grid: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  cardContainer: {\n    backgroundColor: \"#fff\",\n    borderRadius: wp(3),\n    margin: wp(2),\n    width: wp(42),\n    overflow: \"hidden\",\n    shadowColor: \"#000\",\n    shadowOpacity: 0.1,\n    shadowRadius: wp(2),\n    shadowOffset: { width: 0, height: 2 },\n    elevation: 3,\n  },\n  cardImage: {\n    width: \"100%\",\n    height: hp(20),\n  },\n  cardContent: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: wp(3),\n  },\n  cardTitle: {\n    fontSize: wp(4.5),\n    fontWeight: \"600\",\n    color: \"#343a40\",\n  },\n});\n\nexport default PlacesGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}