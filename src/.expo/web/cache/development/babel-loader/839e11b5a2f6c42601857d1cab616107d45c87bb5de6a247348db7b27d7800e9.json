{"ast":null,"code":"'use strict';\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _jsxFileName = \"C:\\\\Users\\\\Dhrumil\\\\VS Code\\\\projectdemo\\\\src\\\\node_modules\\\\react-native\\\\Libraries\\\\Inspector\\\\InspectorOverlay.js\";\nconst View = require('../Components/View/View');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst Dimensions = require('../Utilities/Dimensions').default;\nconst ElementBox = require('./ElementBox');\nconst React = require('react');\nclass InspectorOverlay extends React.Component {\n  findViewForTouchEvent = e => {\n    const {\n      locationX,\n      locationY\n    } = e.nativeEvent.touches[0];\n    this.props.onTouchPoint(locationX, locationY);\n  };\n  shouldSetResponder = e => {\n    this.findViewForTouchEvent(e);\n    return true;\n  };\n  render() {\n    let content = null;\n    if (this.props.inspected) {\n      content = _reactJsxDevRuntime.jsxDEV(ElementBox, {\n        frame: this.props.inspected.frame,\n        style: this.props.inspected.style\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    }\n    return _reactJsxDevRuntime.jsxDEV(View, {\n      onStartShouldSetResponder: this.shouldSetResponder,\n      onResponderMove: this.findViewForTouchEvent,\n      nativeID: \"inspectorOverlay\",\n      style: [styles.inspector, {\n        height: Dimensions.get('window').height\n      }],\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst styles = StyleSheet.create({\n  inspector: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0\n  }\n});\nmodule.exports = InspectorOverlay;","map":{"version":3,"names":["_reactJsxDevRuntime","require","_jsxFileName","View","StyleSheet","Dimensions","default","ElementBox","React","InspectorOverlay","Component","findViewForTouchEvent","e","locationX","locationY","nativeEvent","touches","props","onTouchPoint","shouldSetResponder","render","content","inspected","jsxDEV","frame","style","fileName","lineNumber","columnNumber","onStartShouldSetResponder","onResponderMove","nativeID","styles","inspector","height","get","children","create","backgroundColor","position","left","top","right","module","exports"],"sources":["C:/Users/Dhrumil/VS Code/projectdemo/src/node_modules/react-native/Libraries/Inspector/InspectorOverlay.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {PressEvent} from '../Types/CoreEventTypes';\n\nconst View = require('../Components/View/View');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst Dimensions = require('../Utilities/Dimensions').default;\nconst ElementBox = require('./ElementBox');\nconst React = require('react');\n\ntype Inspected = $ReadOnly<{|\n  frame?: Object,\n  style?: ViewStyleProp,\n|}>;\n\ntype Props = $ReadOnly<{|\n  inspected?: Inspected,\n  onTouchPoint: (locationX: number, locationY: number) => void,\n|}>;\n\nclass InspectorOverlay extends React.Component<Props> {\n  findViewForTouchEvent: (e: PressEvent) => void = (e: PressEvent) => {\n    const {locationX, locationY} = e.nativeEvent.touches[0];\n\n    this.props.onTouchPoint(locationX, locationY);\n  };\n\n  shouldSetResponder: (e: PressEvent) => boolean = (e: PressEvent): boolean => {\n    this.findViewForTouchEvent(e);\n    return true;\n  };\n\n  render(): React.Node {\n    let content = null;\n    if (this.props.inspected) {\n      content = (\n        <ElementBox\n          frame={this.props.inspected.frame}\n          style={this.props.inspected.style}\n        />\n      );\n    }\n\n    return (\n      <View\n        onStartShouldSetResponder={this.shouldSetResponder}\n        onResponderMove={this.findViewForTouchEvent}\n        nativeID=\"inspectorOverlay\" /* TODO: T68258846. */\n        style={[styles.inspector, {height: Dimensions.get('window').height}]}>\n        {content}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  inspector: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n  },\n});\n\nmodule.exports = InspectorOverlay;\n"],"mappings":"AAUA,YAAY;;AAAC,IAAAA,mBAAA,GAAAC,OAAA;AAAA,IAAAC,YAAA;AAKb,MAAMC,IAAI,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAC/C,MAAMG,UAAU,GAAGH,OAAO,CAAC,0BAA0B,CAAC;AACtD,MAAMI,UAAU,GAAGJ,OAAO,CAAC,yBAAyB,CAAC,CAACK,OAAO;AAC7D,MAAMC,UAAU,GAAGN,OAAO,CAAC,cAAc,CAAC;AAC1C,MAAMO,KAAK,GAAGP,OAAO,CAAC,OAAO,CAAC;AAY9B,MAAMQ,gBAAgB,SAASD,KAAK,CAACE,SAAS,CAAQ;EACpDC,qBAAqB,GAA6BC,CAAa,IAAK;IAClE,MAAM;MAACC,SAAS;MAAEC;IAAS,CAAC,GAAGF,CAAC,CAACG,WAAW,CAACC,OAAO,CAAC,CAAC,CAAC;IAEvD,IAAI,CAACC,KAAK,CAACC,YAAY,CAACL,SAAS,EAAEC,SAAS,CAAC;EAC/C,CAAC;EAEDK,kBAAkB,GAAgCP,CAAa,IAAc;IAC3E,IAAI,CAACD,qBAAqB,CAACC,CAAC,CAAC;IAC7B,OAAO,IAAI;EACb,CAAC;EAEDQ,MAAMA,CAAA,EAAe;IACnB,IAAIC,OAAO,GAAG,IAAI;IAClB,IAAI,IAAI,CAACJ,KAAK,CAACK,SAAS,EAAE;MACxBD,OAAO,GACLrB,mBAAA,CAAAuB,MAAA,CAAChB,UAAU;QACTiB,KAAK,EAAE,IAAI,CAACP,KAAK,CAACK,SAAS,CAACE,KAAM;QAClCC,KAAK,EAAE,IAAI,CAACR,KAAK,CAACK,SAAS,CAACG;MAAM;QAAAC,QAAA,EAAAxB,YAAA;QAAAyB,UAAA;QAAAC,YAAA;MAAA,OACnC,CACF;IACH;IAEA,OACE5B,mBAAA,CAAAuB,MAAA,CAACpB,IAAI;MACH0B,yBAAyB,EAAE,IAAI,CAACV,kBAAmB;MACnDW,eAAe,EAAE,IAAI,CAACnB,qBAAsB;MAC5CoB,QAAQ,EAAC,kBAAkB;MAC3BN,KAAK,EAAE,CAACO,MAAM,CAACC,SAAS,EAAE;QAACC,MAAM,EAAE7B,UAAU,CAAC8B,GAAG,CAAC,QAAQ,CAAC,CAACD;MAAM,CAAC,CAAE;MAAAE,QAAA,EACpEf;IAAO;MAAAK,QAAA,EAAAxB,YAAA;MAAAyB,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAEX;AACF;AAEA,MAAMI,MAAM,GAAG5B,UAAU,CAACiC,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,eAAe,EAAE,aAAa;IAC9BC,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAE,CAAC;IACPC,GAAG,EAAE,CAAC;IACNC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAGnC,gBAAgB","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}