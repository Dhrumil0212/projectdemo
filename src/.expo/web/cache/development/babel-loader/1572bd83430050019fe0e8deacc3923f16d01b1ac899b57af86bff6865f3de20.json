{"ast":null,"code":"'use strict';\n\nconst getDevServer = require('./getDevServer');\nasync function symbolicateStackTrace(stack) {\n  const devServer = getDevServer();\n  if (!devServer.bundleLoadedFromServer) {\n    throw new Error('Bundle was not loaded from Metro.');\n  }\n  const fetch = global.fetch ?? require('../../Network/fetch');\n  const response = await fetch(devServer.url + 'symbolicate', {\n    method: 'POST',\n    body: JSON.stringify({\n      stack\n    })\n  });\n  return await response.json();\n}\nmodule.exports = symbolicateStackTrace;","map":{"version":3,"names":["getDevServer","require","symbolicateStackTrace","stack","devServer","bundleLoadedFromServer","Error","fetch","global","response","url","method","body","JSON","stringify","json","module","exports"],"sources":["C:/Users/Dhrumil/VS Code/projectdemo/src/node_modules/react-native/Libraries/Core/Devtools/symbolicateStackTrace.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nimport type {StackFrame} from '../NativeExceptionsManager';\n\nconst getDevServer = require('./getDevServer');\n\nexport type CodeFrame = $ReadOnly<{\n  content: string,\n  location: ?{\n    row: number,\n    column: number,\n    ...\n  },\n  fileName: string,\n}>;\n\nexport type SymbolicatedStackTrace = $ReadOnly<{\n  stack: Array<StackFrame>,\n  codeFrame: ?CodeFrame,\n}>;\n\nasync function symbolicateStackTrace(\n  stack: Array<StackFrame>,\n): Promise<SymbolicatedStackTrace> {\n  const devServer = getDevServer();\n  if (!devServer.bundleLoadedFromServer) {\n    throw new Error('Bundle was not loaded from Metro.');\n  }\n\n  // Lazy-load `fetch` until the first symbolication call to avoid circular requires.\n  const fetch = global.fetch ?? require('../../Network/fetch');\n  const response = await fetch(devServer.url + 'symbolicate', {\n    method: 'POST',\n    body: JSON.stringify({stack}),\n  });\n  return await response.json();\n}\n\nmodule.exports = symbolicateStackTrace;\n"],"mappings":"AAUA,YAAY;;AAIZ,MAAMA,YAAY,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAiB9C,eAAeC,qBAAqBA,CAClCC,KAAwB,EACS;EACjC,MAAMC,SAAS,GAAGJ,YAAY,CAAC,CAAC;EAChC,IAAI,CAACI,SAAS,CAACC,sBAAsB,EAAE;IACrC,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;EACtD;EAGA,MAAMC,KAAK,GAAGC,MAAM,CAACD,KAAK,IAAIN,OAAO,CAAC,qBAAqB,CAAC;EAC5D,MAAMQ,QAAQ,GAAG,MAAMF,KAAK,CAACH,SAAS,CAACM,GAAG,GAAG,aAAa,EAAE;IAC1DC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACX;IAAK,CAAC;EAC9B,CAAC,CAAC;EACF,OAAO,MAAMM,QAAQ,CAACM,IAAI,CAAC,CAAC;AAC9B;AAEAC,MAAM,CAACC,OAAO,GAAGf,qBAAqB","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}